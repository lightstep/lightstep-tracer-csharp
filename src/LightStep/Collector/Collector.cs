// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: collector.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LightStep.Collector {

  /// <summary>Holder for reflection information generated from collector.proto</summary>
  public static partial class CollectorReflection {

    #region Descriptor
    /// <summary>File descriptor for collector.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CollectorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9jb2xsZWN0b3IucHJvdG8SE0xpZ2h0U3RlcC5Db2xsZWN0b3IaH2dvb2ds",
            "ZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8ioAEKC1NwYW5Db250ZXh0EhAKCHRyYWNlX2lkGAEgASgE",
            "Eg8KB3NwYW5faWQYAiABKAQSPgoHYmFnZ2FnZRgDIAMoCzItLkxpZ2h0U3Rl",
            "cC5Db2xsZWN0b3IuU3BhbkNvbnRleHQuQmFnZ2FnZUVudHJ5Gi4KDEJhZ2dh",
            "Z2VFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpEBCghL",
            "ZXlWYWx1ZRILCgNrZXkYASABKAkSFgoMc3RyaW5nX3ZhbHVlGAIgASgJSAAS",
            "EwoJaW50X3ZhbHVlGAMgASgDSAASFgoMZG91YmxlX3ZhbHVlGAQgASgBSAAS",
            "FAoKYm9vbF92YWx1ZRgFIAEoCEgAEhQKCmpzb25fdmFsdWUYBiABKAlIAEIH",
            "CgV2YWx1ZSJjCgNMb2cSLQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBItCgZmaWVsZHMYAiADKAsyHS5MaWdodFN0ZXAu",
            "Q29sbGVjdG9yLktleVZhbHVlIrYBCglSZWZlcmVuY2USQQoMcmVsYXRpb25z",
            "aGlwGAEgASgOMisuTGlnaHRTdGVwLkNvbGxlY3Rvci5SZWZlcmVuY2UuUmVs",
            "YXRpb25zaGlwEjYKDHNwYW5fY29udGV4dBgCIAEoCzIgLkxpZ2h0U3RlcC5D",
            "b2xsZWN0b3IuU3BhbkNvbnRleHQiLgoMUmVsYXRpb25zaGlwEgwKCENISUxE",
            "X09GEAASEAoMRk9MTE9XU19GUk9NEAEirQIKBFNwYW4SNgoMc3Bhbl9jb250",
            "ZXh0GAEgASgLMiAuTGlnaHRTdGVwLkNvbGxlY3Rvci5TcGFuQ29udGV4dBIW",
            "Cg5vcGVyYXRpb25fbmFtZRgCIAEoCRIyCgpyZWZlcmVuY2VzGAMgAygLMh4u",
            "TGlnaHRTdGVwLkNvbGxlY3Rvci5SZWZlcmVuY2USMwoPc3RhcnRfdGltZXN0",
            "YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIXCg9kdXJh",
            "dGlvbl9taWNyb3MYBSABKAQSKwoEdGFncxgGIAMoCzIdLkxpZ2h0U3RlcC5D",
            "b2xsZWN0b3IuS2V5VmFsdWUSJgoEbG9ncxgHIAMoCzIYLkxpZ2h0U3RlcC5D",
            "b2xsZWN0b3IuTG9nIkwKCFJlcG9ydGVyEhMKC3JlcG9ydGVyX2lkGAEgASgE",
            "EisKBHRhZ3MYBCADKAsyHS5MaWdodFN0ZXAuQ29sbGVjdG9yLktleVZhbHVl",
            "IlMKDU1ldHJpY3NTYW1wbGUSDAoEbmFtZRgBIAEoCRITCglpbnRfdmFsdWUY",
            "AiABKANIABIWCgxkb3VibGVfdmFsdWUYAyABKAFIAEIHCgV2YWx1ZSLvAQoP",
            "SW50ZXJuYWxNZXRyaWNzEjMKD3N0YXJ0X3RpbWVzdGFtcBgBIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFwoPZHVyYXRpb25fbWljcm9zGAIg",
            "ASgEEiYKBGxvZ3MYAyADKAsyGC5MaWdodFN0ZXAuQ29sbGVjdG9yLkxvZxIy",
            "CgZjb3VudHMYBCADKAsyIi5MaWdodFN0ZXAuQ29sbGVjdG9yLk1ldHJpY3NT",
            "YW1wbGUSMgoGZ2F1Z2VzGAUgAygLMiIuTGlnaHRTdGVwLkNvbGxlY3Rvci5N",
            "ZXRyaWNzU2FtcGxlIhwKBEF1dGgSFAoMYWNjZXNzX3Rva2VuGAEgASgJIvQB",
            "Cg1SZXBvcnRSZXF1ZXN0Ei8KCHJlcG9ydGVyGAEgASgLMh0uTGlnaHRTdGVw",
            "LkNvbGxlY3Rvci5SZXBvcnRlchInCgRhdXRoGAIgASgLMhkuTGlnaHRTdGVw",
            "LkNvbGxlY3Rvci5BdXRoEigKBXNwYW5zGAMgAygLMhkuTGlnaHRTdGVwLkNv",
            "bGxlY3Rvci5TcGFuEh8KF3RpbWVzdGFtcF9vZmZzZXRfbWljcm9zGAUgASgD",
            "Ej4KEGludGVybmFsX21ldHJpY3MYBiABKAsyJC5MaWdodFN0ZXAuQ29sbGVj",
            "dG9yLkludGVybmFsTWV0cmljcyIaCgdDb21tYW5kEg8KB2Rpc2FibGUYASAB",
            "KAgi4AEKDlJlcG9ydFJlc3BvbnNlEi4KCGNvbW1hbmRzGAEgAygLMhwuTGln",
            "aHRTdGVwLkNvbGxlY3Rvci5Db21tYW5kEjUKEXJlY2VpdmVfdGltZXN0YW1w",
            "GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI2ChJ0cmFuc21p",
            "dF90aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "Eg4KBmVycm9ycxgEIAMoCRIQCgh3YXJuaW5ncxgFIAMoCRINCgVpbmZvcxgG",
            "IAMoCTKVAQoQQ29sbGVjdG9yU2VydmljZRKAAQoGUmVwb3J0EiIuTGlnaHRT",
            "dGVwLkNvbGxlY3Rvci5SZXBvcnRSZXF1ZXN0GiMuTGlnaHRTdGVwLkNvbGxl",
            "Y3Rvci5SZXBvcnRSZXNwb25zZSItgtPkkwInIg8vYXBpL3YyL3JlcG9ydHM6",
            "ASpaERIPL2FwaS92Mi9yZXBvcnRzQjEKGWNvbS5saWdodHN0ZXAudHJhY2Vy",
            "LmdycGNQAVoLY29sbGVjdG9ycGKiAgRMU1BCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.SpanContext), global::LightStep.Collector.SpanContext.Parser, new[]{ "TraceId", "SpanId", "Baggage" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.KeyValue), global::LightStep.Collector.KeyValue.Parser, new[]{ "Key", "StringValue", "IntValue", "DoubleValue", "BoolValue", "JsonValue" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Log), global::LightStep.Collector.Log.Parser, new[]{ "Timestamp", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Reference), global::LightStep.Collector.Reference.Parser, new[]{ "Relationship", "SpanContext" }, null, new[]{ typeof(global::LightStep.Collector.Reference.Types.Relationship) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Span), global::LightStep.Collector.Span.Parser, new[]{ "SpanContext", "OperationName", "References", "StartTimestamp", "DurationMicros", "Tags", "Logs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Reporter), global::LightStep.Collector.Reporter.Parser, new[]{ "ReporterId", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.MetricsSample), global::LightStep.Collector.MetricsSample.Parser, new[]{ "Name", "IntValue", "DoubleValue" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.InternalMetrics), global::LightStep.Collector.InternalMetrics.Parser, new[]{ "StartTimestamp", "DurationMicros", "Logs", "Counts", "Gauges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Auth), global::LightStep.Collector.Auth.Parser, new[]{ "AccessToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.ReportRequest), global::LightStep.Collector.ReportRequest.Parser, new[]{ "Reporter", "Auth", "Spans", "TimestampOffsetMicros", "InternalMetrics" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.Command), global::LightStep.Collector.Command.Parser, new[]{ "Disable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.Collector.ReportResponse), global::LightStep.Collector.ReportResponse.Parser, new[]{ "Commands", "ReceiveTimestamp", "TransmitTimestamp", "Errors", "Warnings", "Infos" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpanContext : pb::IMessage<SpanContext> {
    private static readonly pb::MessageParser<SpanContext> _parser = new pb::MessageParser<SpanContext>(() => new SpanContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpanContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContext(SpanContext other) : this() {
      traceId_ = other.traceId_;
      spanId_ = other.spanId_;
      baggage_ = other.baggage_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContext Clone() {
      return new SpanContext(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private ulong traceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TraceId {
      get { return traceId_; }
      set {
        traceId_ = value;
      }
    }

    /// <summary>Field number for the "span_id" field.</summary>
    public const int SpanIdFieldNumber = 2;
    private ulong spanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SpanId {
      get { return spanId_; }
      set {
        spanId_ = value;
      }
    }

    /// <summary>Field number for the "baggage" field.</summary>
    public const int BaggageFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_baggage_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> baggage_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Baggage {
      get { return baggage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpanContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpanContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      if (SpanId != other.SpanId) return false;
      if (!Baggage.Equals(other.Baggage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId != 0UL) hash ^= TraceId.GetHashCode();
      if (SpanId != 0UL) hash ^= SpanId.GetHashCode();
      hash ^= Baggage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraceId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TraceId);
      }
      if (SpanId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SpanId);
      }
      baggage_.WriteTo(output, _map_baggage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TraceId);
      }
      if (SpanId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SpanId);
      }
      size += baggage_.CalculateSize(_map_baggage_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpanContext other) {
      if (other == null) {
        return;
      }
      if (other.TraceId != 0UL) {
        TraceId = other.TraceId;
      }
      if (other.SpanId != 0UL) {
        SpanId = other.SpanId;
      }
      baggage_.Add(other.baggage_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TraceId = input.ReadUInt64();
            break;
          }
          case 16: {
            SpanId = input.ReadUInt64();
            break;
          }
          case 26: {
            baggage_.AddEntriesFrom(input, _map_baggage_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represent both tags and log fields.
  /// </summary>
  public sealed partial class KeyValue : pb::IMessage<KeyValue> {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_;
      switch (other.ValueCase) {
        case ValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.JsonValue:
          JsonValue = other.JsonValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 2;
    /// <summary>
    /// Holds arbitrary string data; well-formed JSON strings should go in
    /// json_value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "int_value" field.</summary>
    public const int IntValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IntValue {
      get { return valueCase_ == ValueOneofCase.IntValue ? (long) value_ : 0L; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.IntValue;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.DoubleValue;
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return valueCase_ == ValueOneofCase.BoolValue ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "json_value" field.</summary>
    public const int JsonValueFieldNumber = 6;
    /// <summary>
    /// Must be a well-formed JSON value. Truncated JSON should go in
    /// string_value. Should not be used for tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonValue {
      get { return valueCase_ == ValueOneofCase.JsonValue ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.JsonValue;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      StringValue = 2,
      IntValue = 3,
      DoubleValue = 4,
      BoolValue = 5,
      JsonValue = 6,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (StringValue != other.StringValue) return false;
      if (IntValue != other.IntValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (BoolValue != other.BoolValue) return false;
      if (JsonValue != other.JsonValue) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (valueCase_ == ValueOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.JsonValue) hash ^= JsonValue.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (valueCase_ == ValueOneofCase.StringValue) {
        output.WriteRawTag(18);
        output.WriteString(StringValue);
      }
      if (valueCase_ == ValueOneofCase.IntValue) {
        output.WriteRawTag(24);
        output.WriteInt64(IntValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (valueCase_ == ValueOneofCase.BoolValue) {
        output.WriteRawTag(40);
        output.WriteBool(BoolValue);
      }
      if (valueCase_ == ValueOneofCase.JsonValue) {
        output.WriteRawTag(50);
        output.WriteString(JsonValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (valueCase_ == ValueOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (valueCase_ == ValueOneofCase.IntValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (valueCase_ == ValueOneofCase.JsonValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.JsonValue:
          JsonValue = other.JsonValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            StringValue = input.ReadString();
            break;
          }
          case 24: {
            IntValue = input.ReadInt64();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 40: {
            BoolValue = input.ReadBool();
            break;
          }
          case 50: {
            JsonValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Log : pb::IMessage<Log> {
    private static readonly pb::MessageParser<Log> _parser = new pb::MessageParser<Log>(() => new Log());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log(Log other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log Clone() {
      return new Log(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LightStep.Collector.KeyValue> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(18, global::LightStep.Collector.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.KeyValue> fields_ = new pbc::RepeatedField<global::LightStep.Collector.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.KeyValue> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Reference : pb::IMessage<Reference> {
    private static readonly pb::MessageParser<Reference> _parser = new pb::MessageParser<Reference>(() => new Reference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference(Reference other) : this() {
      relationship_ = other.relationship_;
      spanContext_ = other.spanContext_ != null ? other.spanContext_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference Clone() {
      return new Reference(this);
    }

    /// <summary>Field number for the "relationship" field.</summary>
    public const int RelationshipFieldNumber = 1;
    private global::LightStep.Collector.Reference.Types.Relationship relationship_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.Reference.Types.Relationship Relationship {
      get { return relationship_; }
      set {
        relationship_ = value;
      }
    }

    /// <summary>Field number for the "span_context" field.</summary>
    public const int SpanContextFieldNumber = 2;
    private global::LightStep.Collector.SpanContext spanContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.SpanContext SpanContext {
      get { return spanContext_; }
      set {
        spanContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Relationship != other.Relationship) return false;
      if (!object.Equals(SpanContext, other.SpanContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Relationship != 0) hash ^= Relationship.GetHashCode();
      if (spanContext_ != null) hash ^= SpanContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Relationship != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Relationship);
      }
      if (spanContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SpanContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Relationship != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Relationship);
      }
      if (spanContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpanContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reference other) {
      if (other == null) {
        return;
      }
      if (other.Relationship != 0) {
        Relationship = other.Relationship;
      }
      if (other.spanContext_ != null) {
        if (spanContext_ == null) {
          spanContext_ = new global::LightStep.Collector.SpanContext();
        }
        SpanContext.MergeFrom(other.SpanContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            relationship_ = (global::LightStep.Collector.Reference.Types.Relationship) input.ReadEnum();
            break;
          }
          case 18: {
            if (spanContext_ == null) {
              spanContext_ = new global::LightStep.Collector.SpanContext();
            }
            input.ReadMessage(spanContext_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Reference message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Relationship {
        [pbr::OriginalName("CHILD_OF")] ChildOf = 0,
        [pbr::OriginalName("FOLLOWS_FROM")] FollowsFrom = 1,
      }

    }
    #endregion

  }

  public sealed partial class Span : pb::IMessage<Span> {
    private static readonly pb::MessageParser<Span> _parser = new pb::MessageParser<Span>(() => new Span());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Span> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Span() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Span(Span other) : this() {
      spanContext_ = other.spanContext_ != null ? other.spanContext_.Clone() : null;
      operationName_ = other.operationName_;
      references_ = other.references_.Clone();
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      durationMicros_ = other.durationMicros_;
      tags_ = other.tags_.Clone();
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Span Clone() {
      return new Span(this);
    }

    /// <summary>Field number for the "span_context" field.</summary>
    public const int SpanContextFieldNumber = 1;
    private global::LightStep.Collector.SpanContext spanContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.SpanContext SpanContext {
      get { return spanContext_; }
      set {
        spanContext_ = value;
      }
    }

    /// <summary>Field number for the "operation_name" field.</summary>
    public const int OperationNameFieldNumber = 2;
    private string operationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationName {
      get { return operationName_; }
      set {
        operationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "references" field.</summary>
    public const int ReferencesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LightStep.Collector.Reference> _repeated_references_codec
        = pb::FieldCodec.ForMessage(26, global::LightStep.Collector.Reference.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.Reference> references_ = new pbc::RepeatedField<global::LightStep.Collector.Reference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.Reference> References {
      get { return references_; }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "duration_micros" field.</summary>
    public const int DurationMicrosFieldNumber = 5;
    private ulong durationMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DurationMicros {
      get { return durationMicros_; }
      set {
        durationMicros_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::LightStep.Collector.KeyValue> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(50, global::LightStep.Collector.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.KeyValue> tags_ = new pbc::RepeatedField<global::LightStep.Collector.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.KeyValue> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::LightStep.Collector.Log> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(58, global::LightStep.Collector.Log.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.Log> logs_ = new pbc::RepeatedField<global::LightStep.Collector.Log>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.Log> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Span);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Span other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpanContext, other.SpanContext)) return false;
      if (OperationName != other.OperationName) return false;
      if(!references_.Equals(other.references_)) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (DurationMicros != other.DurationMicros) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spanContext_ != null) hash ^= SpanContext.GetHashCode();
      if (OperationName.Length != 0) hash ^= OperationName.GetHashCode();
      hash ^= references_.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (DurationMicros != 0UL) hash ^= DurationMicros.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spanContext_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpanContext);
      }
      if (OperationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OperationName);
      }
      references_.WriteTo(output, _repeated_references_codec);
      if (startTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTimestamp);
      }
      if (DurationMicros != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(DurationMicros);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spanContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpanContext);
      }
      if (OperationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationName);
      }
      size += references_.CalculateSize(_repeated_references_codec);
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (DurationMicros != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMicros);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Span other) {
      if (other == null) {
        return;
      }
      if (other.spanContext_ != null) {
        if (spanContext_ == null) {
          spanContext_ = new global::LightStep.Collector.SpanContext();
        }
        SpanContext.MergeFrom(other.SpanContext);
      }
      if (other.OperationName.Length != 0) {
        OperationName = other.OperationName;
      }
      references_.Add(other.references_);
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          startTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.DurationMicros != 0UL) {
        DurationMicros = other.DurationMicros;
      }
      tags_.Add(other.tags_);
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spanContext_ == null) {
              spanContext_ = new global::LightStep.Collector.SpanContext();
            }
            input.ReadMessage(spanContext_);
            break;
          }
          case 18: {
            OperationName = input.ReadString();
            break;
          }
          case 26: {
            references_.AddEntriesFrom(input, _repeated_references_codec);
            break;
          }
          case 34: {
            if (startTimestamp_ == null) {
              startTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTimestamp_);
            break;
          }
          case 40: {
            DurationMicros = input.ReadUInt64();
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 58: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Reporter : pb::IMessage<Reporter> {
    private static readonly pb::MessageParser<Reporter> _parser = new pb::MessageParser<Reporter>(() => new Reporter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reporter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reporter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reporter(Reporter other) : this() {
      reporterId_ = other.reporterId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reporter Clone() {
      return new Reporter(this);
    }

    /// <summary>Field number for the "reporter_id" field.</summary>
    public const int ReporterIdFieldNumber = 1;
    private ulong reporterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ReporterId {
      get { return reporterId_; }
      set {
        reporterId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LightStep.Collector.KeyValue> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(34, global::LightStep.Collector.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.KeyValue> tags_ = new pbc::RepeatedField<global::LightStep.Collector.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.KeyValue> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reporter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reporter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReporterId != other.ReporterId) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReporterId != 0UL) hash ^= ReporterId.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReporterId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ReporterId);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReporterId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReporterId);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reporter other) {
      if (other == null) {
        return;
      }
      if (other.ReporterId != 0UL) {
        ReporterId = other.ReporterId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReporterId = input.ReadUInt64();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MetricsSample : pb::IMessage<MetricsSample> {
    private static readonly pb::MessageParser<MetricsSample> _parser = new pb::MessageParser<MetricsSample>(() => new MetricsSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricsSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSample(MetricsSample other) : this() {
      name_ = other.name_;
      switch (other.ValueCase) {
        case ValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricsSample Clone() {
      return new MetricsSample(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "int_value" field.</summary>
    public const int IntValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IntValue {
      get { return valueCase_ == ValueOneofCase.IntValue ? (long) value_ : 0L; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.IntValue;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.DoubleValue;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      IntValue = 2,
      DoubleValue = 3,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricsSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricsSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (IntValue != other.IntValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (valueCase_ == ValueOneofCase.IntValue) {
        output.WriteRawTag(16);
        output.WriteInt64(IntValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        output.WriteRawTag(25);
        output.WriteDouble(DoubleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (valueCase_ == ValueOneofCase.IntValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricsSample other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            IntValue = input.ReadInt64();
            break;
          }
          case 25: {
            DoubleValue = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InternalMetrics : pb::IMessage<InternalMetrics> {
    private static readonly pb::MessageParser<InternalMetrics> _parser = new pb::MessageParser<InternalMetrics>(() => new InternalMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InternalMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalMetrics(InternalMetrics other) : this() {
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      durationMicros_ = other.durationMicros_;
      logs_ = other.logs_.Clone();
      counts_ = other.counts_.Clone();
      gauges_ = other.gauges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalMetrics Clone() {
      return new InternalMetrics(this);
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "duration_micros" field.</summary>
    public const int DurationMicrosFieldNumber = 2;
    private ulong durationMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DurationMicros {
      get { return durationMicros_; }
      set {
        durationMicros_ = value;
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LightStep.Collector.Log> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(26, global::LightStep.Collector.Log.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.Log> logs_ = new pbc::RepeatedField<global::LightStep.Collector.Log>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.Log> Logs {
      get { return logs_; }
    }

    /// <summary>Field number for the "counts" field.</summary>
    public const int CountsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LightStep.Collector.MetricsSample> _repeated_counts_codec
        = pb::FieldCodec.ForMessage(34, global::LightStep.Collector.MetricsSample.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.MetricsSample> counts_ = new pbc::RepeatedField<global::LightStep.Collector.MetricsSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.MetricsSample> Counts {
      get { return counts_; }
    }

    /// <summary>Field number for the "gauges" field.</summary>
    public const int GaugesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::LightStep.Collector.MetricsSample> _repeated_gauges_codec
        = pb::FieldCodec.ForMessage(42, global::LightStep.Collector.MetricsSample.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.MetricsSample> gauges_ = new pbc::RepeatedField<global::LightStep.Collector.MetricsSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.MetricsSample> Gauges {
      get { return gauges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InternalMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InternalMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (DurationMicros != other.DurationMicros) return false;
      if(!logs_.Equals(other.logs_)) return false;
      if(!counts_.Equals(other.counts_)) return false;
      if(!gauges_.Equals(other.gauges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (DurationMicros != 0UL) hash ^= DurationMicros.GetHashCode();
      hash ^= logs_.GetHashCode();
      hash ^= counts_.GetHashCode();
      hash ^= gauges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimestamp);
      }
      if (DurationMicros != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(DurationMicros);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      counts_.WriteTo(output, _repeated_counts_codec);
      gauges_.WriteTo(output, _repeated_gauges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (DurationMicros != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMicros);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      size += counts_.CalculateSize(_repeated_counts_codec);
      size += gauges_.CalculateSize(_repeated_gauges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InternalMetrics other) {
      if (other == null) {
        return;
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          startTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.DurationMicros != 0UL) {
        DurationMicros = other.DurationMicros;
      }
      logs_.Add(other.logs_);
      counts_.Add(other.counts_);
      gauges_.Add(other.gauges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTimestamp_ == null) {
              startTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTimestamp_);
            break;
          }
          case 16: {
            DurationMicros = input.ReadUInt64();
            break;
          }
          case 26: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
          case 34: {
            counts_.AddEntriesFrom(input, _repeated_counts_codec);
            break;
          }
          case 42: {
            gauges_.AddEntriesFrom(input, _repeated_gauges_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Auth : pb::IMessage<Auth> {
    private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Auth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth(Auth other) : this() {
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth Clone() {
      return new Auth(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Auth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Auth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Auth other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportRequest : pb::IMessage<ReportRequest> {
    private static readonly pb::MessageParser<ReportRequest> _parser = new pb::MessageParser<ReportRequest>(() => new ReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest(ReportRequest other) : this() {
      reporter_ = other.reporter_ != null ? other.reporter_.Clone() : null;
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      spans_ = other.spans_.Clone();
      timestampOffsetMicros_ = other.timestampOffsetMicros_;
      internalMetrics_ = other.internalMetrics_ != null ? other.internalMetrics_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest Clone() {
      return new ReportRequest(this);
    }

    /// <summary>Field number for the "reporter" field.</summary>
    public const int ReporterFieldNumber = 1;
    private global::LightStep.Collector.Reporter reporter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.Reporter Reporter {
      get { return reporter_; }
      set {
        reporter_ = value;
      }
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 2;
    private global::LightStep.Collector.Auth auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.Auth Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "spans" field.</summary>
    public const int SpansFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LightStep.Collector.Span> _repeated_spans_codec
        = pb::FieldCodec.ForMessage(26, global::LightStep.Collector.Span.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.Span> spans_ = new pbc::RepeatedField<global::LightStep.Collector.Span>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.Span> Spans {
      get { return spans_; }
    }

    /// <summary>Field number for the "timestamp_offset_micros" field.</summary>
    public const int TimestampOffsetMicrosFieldNumber = 5;
    private long timestampOffsetMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimestampOffsetMicros {
      get { return timestampOffsetMicros_; }
      set {
        timestampOffsetMicros_ = value;
      }
    }

    /// <summary>Field number for the "internal_metrics" field.</summary>
    public const int InternalMetricsFieldNumber = 6;
    private global::LightStep.Collector.InternalMetrics internalMetrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.Collector.InternalMetrics InternalMetrics {
      get { return internalMetrics_; }
      set {
        internalMetrics_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reporter, other.Reporter)) return false;
      if (!object.Equals(Auth, other.Auth)) return false;
      if(!spans_.Equals(other.spans_)) return false;
      if (TimestampOffsetMicros != other.TimestampOffsetMicros) return false;
      if (!object.Equals(InternalMetrics, other.InternalMetrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reporter_ != null) hash ^= Reporter.GetHashCode();
      if (auth_ != null) hash ^= Auth.GetHashCode();
      hash ^= spans_.GetHashCode();
      if (TimestampOffsetMicros != 0L) hash ^= TimestampOffsetMicros.GetHashCode();
      if (internalMetrics_ != null) hash ^= InternalMetrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reporter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reporter);
      }
      if (auth_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Auth);
      }
      spans_.WriteTo(output, _repeated_spans_codec);
      if (TimestampOffsetMicros != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TimestampOffsetMicros);
      }
      if (internalMetrics_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InternalMetrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reporter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reporter);
      }
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      size += spans_.CalculateSize(_repeated_spans_codec);
      if (TimestampOffsetMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampOffsetMicros);
      }
      if (internalMetrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InternalMetrics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.reporter_ != null) {
        if (reporter_ == null) {
          reporter_ = new global::LightStep.Collector.Reporter();
        }
        Reporter.MergeFrom(other.Reporter);
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          auth_ = new global::LightStep.Collector.Auth();
        }
        Auth.MergeFrom(other.Auth);
      }
      spans_.Add(other.spans_);
      if (other.TimestampOffsetMicros != 0L) {
        TimestampOffsetMicros = other.TimestampOffsetMicros;
      }
      if (other.internalMetrics_ != null) {
        if (internalMetrics_ == null) {
          internalMetrics_ = new global::LightStep.Collector.InternalMetrics();
        }
        InternalMetrics.MergeFrom(other.InternalMetrics);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reporter_ == null) {
              reporter_ = new global::LightStep.Collector.Reporter();
            }
            input.ReadMessage(reporter_);
            break;
          }
          case 18: {
            if (auth_ == null) {
              auth_ = new global::LightStep.Collector.Auth();
            }
            input.ReadMessage(auth_);
            break;
          }
          case 26: {
            spans_.AddEntriesFrom(input, _repeated_spans_codec);
            break;
          }
          case 40: {
            TimestampOffsetMicros = input.ReadInt64();
            break;
          }
          case 50: {
            if (internalMetrics_ == null) {
              internalMetrics_ = new global::LightStep.Collector.InternalMetrics();
            }
            input.ReadMessage(internalMetrics_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      disable_ = other.disable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "disable" field.</summary>
    public const int DisableFieldNumber = 1;
    private bool disable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disable {
      get { return disable_; }
      set {
        disable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disable != other.Disable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disable != false) hash ^= Disable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Disable != false) {
        Disable = other.Disable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportResponse : pb::IMessage<ReportResponse> {
    private static readonly pb::MessageParser<ReportResponse> _parser = new pb::MessageParser<ReportResponse>(() => new ReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.Collector.CollectorReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse(ReportResponse other) : this() {
      commands_ = other.commands_.Clone();
      receiveTimestamp_ = other.receiveTimestamp_ != null ? other.receiveTimestamp_.Clone() : null;
      transmitTimestamp_ = other.transmitTimestamp_ != null ? other.transmitTimestamp_.Clone() : null;
      errors_ = other.errors_.Clone();
      warnings_ = other.warnings_.Clone();
      infos_ = other.infos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse Clone() {
      return new ReportResponse(this);
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LightStep.Collector.Command> _repeated_commands_codec
        = pb::FieldCodec.ForMessage(10, global::LightStep.Collector.Command.Parser);
    private readonly pbc::RepeatedField<global::LightStep.Collector.Command> commands_ = new pbc::RepeatedField<global::LightStep.Collector.Command>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LightStep.Collector.Command> Commands {
      get { return commands_; }
    }

    /// <summary>Field number for the "receive_timestamp" field.</summary>
    public const int ReceiveTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp receiveTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReceiveTimestamp {
      get { return receiveTimestamp_; }
      set {
        receiveTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "transmit_timestamp" field.</summary>
    public const int TransmitTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp transmitTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TransmitTimestamp {
      get { return transmitTimestamp_; }
      set {
        transmitTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_errors_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> errors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_warnings_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> warnings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Warnings {
      get { return warnings_; }
    }

    /// <summary>Field number for the "infos" field.</summary>
    public const int InfosFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_infos_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> infos_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Infos {
      get { return infos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!commands_.Equals(other.commands_)) return false;
      if (!object.Equals(ReceiveTimestamp, other.ReceiveTimestamp)) return false;
      if (!object.Equals(TransmitTimestamp, other.TransmitTimestamp)) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if(!warnings_.Equals(other.warnings_)) return false;
      if(!infos_.Equals(other.infos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= commands_.GetHashCode();
      if (receiveTimestamp_ != null) hash ^= ReceiveTimestamp.GetHashCode();
      if (transmitTimestamp_ != null) hash ^= TransmitTimestamp.GetHashCode();
      hash ^= errors_.GetHashCode();
      hash ^= warnings_.GetHashCode();
      hash ^= infos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      commands_.WriteTo(output, _repeated_commands_codec);
      if (receiveTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReceiveTimestamp);
      }
      if (transmitTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransmitTimestamp);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      warnings_.WriteTo(output, _repeated_warnings_codec);
      infos_.WriteTo(output, _repeated_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += commands_.CalculateSize(_repeated_commands_codec);
      if (receiveTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiveTimestamp);
      }
      if (transmitTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransmitTimestamp);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      size += warnings_.CalculateSize(_repeated_warnings_codec);
      size += infos_.CalculateSize(_repeated_infos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportResponse other) {
      if (other == null) {
        return;
      }
      commands_.Add(other.commands_);
      if (other.receiveTimestamp_ != null) {
        if (receiveTimestamp_ == null) {
          receiveTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReceiveTimestamp.MergeFrom(other.ReceiveTimestamp);
      }
      if (other.transmitTimestamp_ != null) {
        if (transmitTimestamp_ == null) {
          transmitTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TransmitTimestamp.MergeFrom(other.TransmitTimestamp);
      }
      errors_.Add(other.errors_);
      warnings_.Add(other.warnings_);
      infos_.Add(other.infos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            commands_.AddEntriesFrom(input, _repeated_commands_codec);
            break;
          }
          case 18: {
            if (receiveTimestamp_ == null) {
              receiveTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(receiveTimestamp_);
            break;
          }
          case 26: {
            if (transmitTimestamp_ == null) {
              transmitTimestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(transmitTimestamp_);
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 42: {
            warnings_.AddEntriesFrom(input, _repeated_warnings_codec);
            break;
          }
          case 50: {
            infos_.AddEntriesFrom(input, _repeated_infos_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

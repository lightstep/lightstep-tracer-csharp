// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lightstep.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LightStep {

  /// <summary>Holder for reflection information generated from lightstep.proto</summary>
  public static partial class LightstepReflection {

    #region Descriptor
    /// <summary>File descriptor for lightstep.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LightstepReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9saWdodHN0ZXAucHJvdG8SCUxpZ2h0U3RlcCJeCg1CaW5hcnlDYXJyaWVy",
            "EhsKE2RlcHJlY2F0ZWRfdGV4dF9jdHgYASADKAwSMAoJYmFzaWNfY3R4GAIg",
            "ASgLMh0uTGlnaHRTdGVwLkJhc2ljVHJhY2VyQ2FycmllciLFAQoSQmFzaWNU",
            "cmFjZXJDYXJyaWVyEhAKCHRyYWNlX2lkGAEgASgGEg8KB3NwYW5faWQYAiAB",
            "KAYSDwoHc2FtcGxlZBgDIAEoCBJGCg1iYWdnYWdlX2l0ZW1zGAQgAygLMi8u",
            "TGlnaHRTdGVwLkJhc2ljVHJhY2VyQ2Fycmllci5CYWdnYWdlSXRlbXNFbnRy",
            "eRozChFCYWdnYWdlSXRlbXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBQg1aC2xpZ2h0c3RlcHBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.BinaryCarrier), global::LightStep.BinaryCarrier.Parser, new[]{ "DeprecatedTextCtx", "BasicCtx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LightStep.BasicTracerCarrier), global::LightStep.BasicTracerCarrier.Parser, new[]{ "TraceId", "SpanId", "Sampled", "BaggageItems" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The standard carrier for binary context propagation into LightStep.
  /// </summary>
  public sealed partial class BinaryCarrier : pb::IMessage<BinaryCarrier> {
    private static readonly pb::MessageParser<BinaryCarrier> _parser = new pb::MessageParser<BinaryCarrier>(() => new BinaryCarrier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BinaryCarrier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.LightstepReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryCarrier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryCarrier(BinaryCarrier other) : this() {
      deprecatedTextCtx_ = other.deprecatedTextCtx_.Clone();
      basicCtx_ = other.basicCtx_ != null ? other.basicCtx_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryCarrier Clone() {
      return new BinaryCarrier(this);
    }

    /// <summary>Field number for the "deprecated_text_ctx" field.</summary>
    public const int DeprecatedTextCtxFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_deprecatedTextCtx_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> deprecatedTextCtx_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// "text_ctx" was deprecated following lightstep-tracer-cpp-0.36
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> DeprecatedTextCtx {
      get { return deprecatedTextCtx_; }
    }

    /// <summary>Field number for the "basic_ctx" field.</summary>
    public const int BasicCtxFieldNumber = 2;
    private global::LightStep.BasicTracerCarrier basicCtx_;
    /// <summary>
    /// The Opentracing "basictracer" proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LightStep.BasicTracerCarrier BasicCtx {
      get { return basicCtx_; }
      set {
        basicCtx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BinaryCarrier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BinaryCarrier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deprecatedTextCtx_.Equals(other.deprecatedTextCtx_)) return false;
      if (!object.Equals(BasicCtx, other.BasicCtx)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deprecatedTextCtx_.GetHashCode();
      if (basicCtx_ != null) hash ^= BasicCtx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      deprecatedTextCtx_.WriteTo(output, _repeated_deprecatedTextCtx_codec);
      if (basicCtx_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BasicCtx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deprecatedTextCtx_.CalculateSize(_repeated_deprecatedTextCtx_codec);
      if (basicCtx_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicCtx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BinaryCarrier other) {
      if (other == null) {
        return;
      }
      deprecatedTextCtx_.Add(other.deprecatedTextCtx_);
      if (other.basicCtx_ != null) {
        if (basicCtx_ == null) {
          basicCtx_ = new global::LightStep.BasicTracerCarrier();
        }
        BasicCtx.MergeFrom(other.BasicCtx);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deprecatedTextCtx_.AddEntriesFrom(input, _repeated_deprecatedTextCtx_codec);
            break;
          }
          case 18: {
            if (basicCtx_ == null) {
              basicCtx_ = new global::LightStep.BasicTracerCarrier();
            }
            input.ReadMessage(basicCtx_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Copy of https://github.com/opentracing/basictracer-go/blob/master/wire/wire.proto
  /// </summary>
  public sealed partial class BasicTracerCarrier : pb::IMessage<BasicTracerCarrier> {
    private static readonly pb::MessageParser<BasicTracerCarrier> _parser = new pb::MessageParser<BasicTracerCarrier>(() => new BasicTracerCarrier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicTracerCarrier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LightStep.LightstepReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTracerCarrier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTracerCarrier(BasicTracerCarrier other) : this() {
      traceId_ = other.traceId_;
      spanId_ = other.spanId_;
      sampled_ = other.sampled_;
      baggageItems_ = other.baggageItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTracerCarrier Clone() {
      return new BasicTracerCarrier(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private ulong traceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TraceId {
      get { return traceId_; }
      set {
        traceId_ = value;
      }
    }

    /// <summary>Field number for the "span_id" field.</summary>
    public const int SpanIdFieldNumber = 2;
    private ulong spanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SpanId {
      get { return spanId_; }
      set {
        spanId_ = value;
      }
    }

    /// <summary>Field number for the "sampled" field.</summary>
    public const int SampledFieldNumber = 3;
    private bool sampled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sampled {
      get { return sampled_; }
      set {
        sampled_ = value;
      }
    }

    /// <summary>Field number for the "baggage_items" field.</summary>
    public const int BaggageItemsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_baggageItems_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> baggageItems_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> BaggageItems {
      get { return baggageItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicTracerCarrier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicTracerCarrier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      if (SpanId != other.SpanId) return false;
      if (Sampled != other.Sampled) return false;
      if (!BaggageItems.Equals(other.BaggageItems)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId != 0UL) hash ^= TraceId.GetHashCode();
      if (SpanId != 0UL) hash ^= SpanId.GetHashCode();
      if (Sampled != false) hash ^= Sampled.GetHashCode();
      hash ^= BaggageItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraceId != 0UL) {
        output.WriteRawTag(9);
        output.WriteFixed64(TraceId);
      }
      if (SpanId != 0UL) {
        output.WriteRawTag(17);
        output.WriteFixed64(SpanId);
      }
      if (Sampled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Sampled);
      }
      baggageItems_.WriteTo(output, _map_baggageItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraceId != 0UL) {
        size += 1 + 8;
      }
      if (SpanId != 0UL) {
        size += 1 + 8;
      }
      if (Sampled != false) {
        size += 1 + 1;
      }
      size += baggageItems_.CalculateSize(_map_baggageItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicTracerCarrier other) {
      if (other == null) {
        return;
      }
      if (other.TraceId != 0UL) {
        TraceId = other.TraceId;
      }
      if (other.SpanId != 0UL) {
        SpanId = other.SpanId;
      }
      if (other.Sampled != false) {
        Sampled = other.Sampled;
      }
      baggageItems_.Add(other.baggageItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            TraceId = input.ReadFixed64();
            break;
          }
          case 17: {
            SpanId = input.ReadFixed64();
            break;
          }
          case 24: {
            Sampled = input.ReadBool();
            break;
          }
          case 34: {
            baggageItems_.AddEntriesFrom(input, _map_baggageItems_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
